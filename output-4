classDiagram
class ControllerButtons
ControllerButtons : +build() Widget
StatelessWidget <|-- ControllerButtons

class Player
Player : +build() Widget
StatelessWidget <|-- Player

class SongImgeDisplay
SongImgeDisplay : +build() Widget
SongImgeDisplay : +getUri() String?
StatelessWidget <|-- SongImgeDisplay

class SettingsDialog
SettingsDialog : +build() Widget
StatelessWidget <|-- SettingsDialog

class PermissionDialog
PermissionDialog : +title String
PermissionDialog : +icon IconData
PermissionDialog o-- IconData
PermissionDialog : +description String
PermissionDialog : +onPress void Function
PermissionDialog o-- void Function
PermissionDialog : +build() Widget
StatelessWidget <|-- PermissionDialog

class PersonalizationButton
PersonalizationButton : +build() Widget
PersonalizationButton : +isActive() bool
StatelessWidget <|-- PersonalizationButton

class SpotifyButton
SpotifyButton : +build() Widget
StatelessWidget <|-- SpotifyButton

class SettingsButton
SettingsButton : +build() Widget
StatelessWidget <|-- SettingsButton

class SignInState
<<abstract>> SignInState
Equatable <|-- SignInState

class InitialAuthState
InitialAuthState : +props List~Object?~
SignInState <|-- InitialAuthState

class AttemptSignIn
AttemptSignIn : +props List~Object?~
SignInState <|-- AttemptSignIn

class HasSignedIn
HasSignedIn : +props List~Object?~
SignInState <|-- HasSignedIn

class SignInError
SignInError : +errorMsg String
SignInError : +stackTrace dynamic
SignInError : +props List~Object?~
SignInState <|-- SignInError

class SignInBloc
SignInBloc : +getIt GetIt
SignInBloc o-- GetIt
SignInBloc : -_authServiceA AuthServiceA
SignInBloc o-- AuthServiceA
SignInBloc : -_chromeSafariBrowser ChromeSafariBrowser
SignInBloc o-- ChromeSafariBrowser
SignInBloc : -_signInWithOauth() Future<void>
Bloc <|-- SignInBloc

class SignInEvent
<<abstract>> SignInEvent

class SignInWithOauth
SignInEvent <|-- SignInWithOauth

class CollectionForegroundServiceState
<<abstract>> CollectionForegroundServiceState
Equatable <|-- CollectionForegroundServiceState

class InitalCollectionForegroundServiceState
InitalCollectionForegroundServiceState : +props List~Object?~
CollectionForegroundServiceState <|-- InitalCollectionForegroundServiceState

class CollectionForegroundServiceErrorState
CollectionForegroundServiceErrorState : +errorMsg String
CollectionForegroundServiceErrorState : +stackT dynamic
CollectionForegroundServiceErrorState : +props List~Object?~
CollectionForegroundServiceState <|-- CollectionForegroundServiceErrorState

class CollectionForegroundServiceIsRunning
CollectionForegroundServiceIsRunning : +props List~Object?~
CollectionForegroundServiceState <|-- CollectionForegroundServiceIsRunning

class CollectionForegroundServiceIsNotRunning
CollectionForegroundServiceIsNotRunning : +props List~Object?~
CollectionForegroundServiceState <|-- CollectionForegroundServiceIsNotRunning

class HasStoppedCollectionForegroundService
HasStoppedCollectionForegroundService : +props List~Object?~
CollectionForegroundServiceState <|-- HasStoppedCollectionForegroundService

class HasRestartedCollectionForegroundService
HasRestartedCollectionForegroundService : +props List~Object?~
CollectionForegroundServiceState <|-- HasRestartedCollectionForegroundService

class HasStartedCollectionForegroundService
HasStartedCollectionForegroundService : +props List~Object?~
CollectionForegroundServiceState <|-- HasStartedCollectionForegroundService

class CollectionForegroundBloc
CollectionForegroundBloc : -_getIt GetIt
CollectionForegroundBloc o-- GetIt
CollectionForegroundBloc : -_collectionForegroundServiceA CollectionForegroundServiceA
CollectionForegroundBloc o-- CollectionForegroundServiceA
Bloc <|-- CollectionForegroundBloc

class CollectionForegroundServiceEvent
<<abstract>> CollectionForegroundServiceEvent

class CollectionStartForegroundService
CollectionForegroundServiceEvent <|-- CollectionStartForegroundService

class StopCollectionForegroundService
CollectionForegroundServiceEvent <|-- StopCollectionForegroundService

class RestartCollectionForegroundService
CollectionForegroundServiceEvent <|-- RestartCollectionForegroundService

class IsCollectionForegroundServiceRunning
CollectionForegroundServiceEvent <|-- IsCollectionForegroundServiceRunning

class StartCollectionForegroundService
CollectionForegroundServiceEvent <|-- StartCollectionForegroundService

class UserBehaviourState
<<abstract>> UserBehaviourState
Equatable <|-- UserBehaviourState

class InitalUserBehaviourState
InitalUserBehaviourState : +props List~Object?~
UserBehaviourState <|-- InitalUserBehaviourState

class HasNoUserBehaviourData
HasNoUserBehaviourData : +props List~Object?~
UserBehaviourState <|-- HasNoUserBehaviourData

class HasUserBehaviourData
HasUserBehaviourData : +dateTime DateTime?
HasUserBehaviourData : +models List~ListeningBehaviourModel~
HasUserBehaviourData : +props List~Object?~
UserBehaviourState <|-- HasUserBehaviourData

class UserBehaviourHasError
UserBehaviourHasError : +errorMsg String
UserBehaviourHasError : +stackT dynamic
UserBehaviourHasError : +props List~Object?~
UserBehaviourState <|-- UserBehaviourHasError

class IsLoadingUserBehaviourData
IsLoadingUserBehaviourData : +props List~Object?~
UserBehaviourState <|-- IsLoadingUserBehaviourData

class UserBehaviourEvent
<<abstract>> UserBehaviourEvent

class GetUserData
UserBehaviourEvent <|-- GetUserData

class UserBehaviourBloc
UserBehaviourBloc : -_getIt GetIt
UserBehaviourBloc o-- GetIt
UserBehaviourBloc : -_dbService DBServiceA
UserBehaviourBloc o-- DBServiceA
UserBehaviourBloc : +behaviourUploadService BehaviourUploadServiceA
UserBehaviourBloc o-- BehaviourUploadServiceA
UserBehaviourBloc : -_getData() void
Bloc <|-- UserBehaviourBloc

class PlayerEvent
<<abstract>> PlayerEvent

class Play
PlayerEvent <|-- Play

class Stop
PlayerEvent <|-- Stop

class SkipForward
PlayerEvent <|-- SkipForward

class SkipBackwards
PlayerEvent <|-- SkipBackwards

class InitPlayer
PlayerEvent <|-- InitPlayer

class IRestart
PlayerEvent <|-- IRestart

class PlayerState
<<abstract>> PlayerState
Equatable <|-- PlayerState

class InitalPlayerState
InitalPlayerState : +props List~Object?~
PlayerState <|-- InitalPlayerState

class IsPlayingSong
IsPlayingSong : +playerState PlayerStateModelA
IsPlayingSong o-- PlayerStateModelA
IsPlayingSong : +props List~Object?~
PlayerState <|-- IsPlayingSong

class IsPaused
IsPaused : +playerState PlayerStateModelA
IsPaused o-- PlayerStateModelA
IsPaused : +props List~Object?~
PlayerState <|-- IsPaused

class HasSkippedForward
HasSkippedForward : +playerState PlayerStateModelA
HasSkippedForward o-- PlayerStateModelA
HasSkippedForward : +props List~Object?~
PlayerState <|-- HasSkippedForward

class HasSkippedBackwards
HasSkippedBackwards : +playerState PlayerStateModelA
HasSkippedBackwards o-- PlayerStateModelA
HasSkippedBackwards : +imageBytes Uint8List?
HasSkippedBackwards o-- Uint8List
HasSkippedBackwards : +props List~Object?~
PlayerState <|-- HasSkippedBackwards

class PlayerHasError
PlayerHasError : +errorMsg String
PlayerHasError : +stackT dynamic
PlayerHasError : +props List~Object?~
PlayerState <|-- PlayerHasError

class InitalizingPlayer
InitalizingPlayer : +props List~Object?~
PlayerState <|-- InitalizingPlayer

class HasInitalizedPlayer
HasInitalizedPlayer : +props List~Object?~
PlayerState <|-- HasInitalizedPlayer

class IsRestarting
IsRestarting : +props List~Object?~
PlayerState <|-- IsRestarting

class PlayerBloc
PlayerBloc : -_getIt GetIt
PlayerBloc o-- GetIt
PlayerBloc : -_musicService MusicServiceA
PlayerBloc o-- MusicServiceA
PlayerBloc : -_authService AuthServiceA
PlayerBloc o-- AuthServiceA
PlayerBloc : -_recommendationService RecommendationServiceA
PlayerBloc o-- RecommendationServiceA
PlayerBloc : -_locationService LocationServiceA
PlayerBloc o-- LocationServiceA
PlayerBloc : -_foregroundService RecommendationForegroundServiceA
PlayerBloc o-- RecommendationForegroundServiceA
PlayerBloc : -_activityService ActivityServiceA
PlayerBloc o-- ActivityServiceA
PlayerBloc : -_refreshTokenCounterStream Stream~int~
PlayerBloc o-- Stream~int~
PlayerBloc : -_refreshTokenSub StreamSubscription~int~
PlayerBloc o-- StreamSubscription~int~
PlayerBloc : +nextSongId String
PlayerBloc : -_testSub StreamSubscription~dynamic~?
PlayerBloc o-- StreamSubscription~dynamic~
PlayerBloc : -_init() Future<void>
PlayerBloc : -_onPlay() dynamic
PlayerBloc : +getImageBytes() Future<Uint8List?>
PlayerBloc : -_onStop() dynamic
PlayerBloc : -_onSkipBackwards() dynamic
PlayerBloc : -_onSkipForward() dynamic
PlayerBloc : -_restart() dynamic
PlayerBloc : -_getRecommendation() Future<String>
PlayerBloc : +close() Future<void>
Bloc <|-- PlayerBloc

class SettingsBlocState
<<abstract>> SettingsBlocState
Equatable <|-- SettingsBlocState

class InitialSettingsState
InitialSettingsState : +props List~Object?~
SettingsBlocState <|-- InitialSettingsState

class LoggingOut
LoggingOut : +props List~Object?~
SettingsBlocState <|-- LoggingOut

class IsUplodingBehaviour
IsUplodingBehaviour : +props List~Object?~
SettingsBlocState <|-- IsUplodingBehaviour

class ErrorUploadingBehaviour
ErrorUploadingBehaviour : +errorMsg String
ErrorUploadingBehaviour : +stackT dynamic
ErrorUploadingBehaviour : +props List~Object?~
SettingsBlocState <|-- ErrorUploadingBehaviour

class SuccessUploadingBehaviour
SuccessUploadingBehaviour : +props List~Object?~
SettingsBlocState <|-- SuccessUploadingBehaviour

class SettingsBloc
SettingsBloc : -_authService AuthServiceA
SettingsBloc o-- AuthServiceA
SettingsBloc : -_getIt GetIt
SettingsBloc o-- GetIt
SettingsBloc : -_uploadBehaviour() Future<void>
SettingsBloc : -_logOut() void
Bloc <|-- SettingsBloc

class SettingsBlocEvent
<<abstract>> SettingsBlocEvent

class LogOut
SettingsBlocEvent <|-- LogOut

class UploadBehaviour
SettingsBlocEvent <|-- UploadBehaviour

class PermissionBlocEvent
<<abstract>> PermissionBlocEvent

class HasPermissions
PermissionBlocEvent <|-- HasPermissions

class IsGPSEnabled
PermissionBlocEvent <|-- IsGPSEnabled

class PermissionBlocState
<<abstract>> PermissionBlocState
Equatable <|-- PermissionBlocState

class PermissionBlocInitialState
PermissionBlocInitialState : +props List~Object?~
PermissionBlocState <|-- PermissionBlocInitialState

class HasAllPermissions
HasAllPermissions : +props List~Object?~
PermissionBlocState <|-- HasAllPermissions

class HasNotAllPermissions
HasNotAllPermissions : +props List~Object?~
PermissionBlocState <|-- HasNotAllPermissions

class PermissionBlocError
PermissionBlocError : +errorMsg String
PermissionBlocError : +stackT dynamic
PermissionBlocError : +props List~Object?~
PermissionBlocState <|-- PermissionBlocError

class GPSIsDisabled
GPSIsDisabled : +props List~Object?~
PermissionBlocState <|-- GPSIsDisabled

class PermissionBloc
PermissionBloc : -_getIt GetIt
PermissionBloc o-- GetIt
PermissionBloc : -_permissionService PermissionServiceA
PermissionBloc o-- PermissionServiceA
PermissionBloc : -_hasPermissions() Future<void>
PermissionBloc : -_hasAllPermissions() Future<bool>
Bloc <|-- PermissionBloc

class ListeningBehaviourModel
ListeningBehaviourModel : +id int
ListeningBehaviourModel : +songId String
ListeningBehaviourModel : +artists List~String~
ListeningBehaviourModel : +genres List~String~
ListeningBehaviourModel : +latitude double
ListeningBehaviourModel : +longitude double
ListeningBehaviourModel : +activity String
ListeningBehaviourModel : +dateTimeInMis int
ListeningBehaviourModel : +toJson() Map<String, dynamic>
ListeningBehaviourModel : +copyWith() ListeningBehaviourModel

class LocationModel
LocationModel : +latitude double
LocationModel : +longitude double
LocationModel : +timeStampInMs int?

class PlayerStateModel
PlayerStateModelA <|-- PlayerStateModel

class RecommendedTrackModel
RecommendedTrackModel : +name String
RecommendedTrackModel : +id String
RecommendedTrackModel : +albumType String
RecommendedTrackModel : +artists List~String~
RecommendedTrackModel : +genres List~String~
RecommendedTrackModel : +copywith() RecommendedTrackModel

class LoginPage
LoginPage : +build() Widget
StatelessWidget <|-- LoginPage

class UserBehaviourPage
UserBehaviourPage : +createState() State<UserBehaviourPage>
StatefulWidget <|-- UserBehaviourPage

class _UserBehaviourPageState
_UserBehaviourPageState : +dbService DBServiceA
_UserBehaviourPageState o-- DBServiceA
_UserBehaviourPageState : +columns2 List~DataColumn~
_UserBehaviourPageState : +initState() void
_UserBehaviourPageState : +didChangeDependencies() void
_UserBehaviourPageState : +dispose() void
_UserBehaviourPageState : +build() Widget
_UserBehaviourPageState : +convertBehaviourToRowEntry() List<DataRow>
State <|-- _UserBehaviourPageState

class HomePage
HomePage : +build() Widget
StatelessWidget <|-- HomePage

class MyApp
MyApp : +build() Widget
StatelessWidget <|-- MyApp

class SpotifyChromeSafariBrowser
SpotifyChromeSafariBrowser : +onOpened() void
SpotifyChromeSafariBrowser : +onCompletedInitialLoad() void
SpotifyChromeSafariBrowser : +onClosed() void
ChromeSafariBrowser <|-- SpotifyChromeSafariBrowser

class SpotifyWrapper
SpotifyWrapper : +spotifyWeb SpotifyWeb
SpotifyWrapper o-- SpotifyWeb
SpotifyWrapper : +getRecentlyPlayedTracks() Future<List<dynamic>>
SpotifyWrapper : +getGenres() Future<Map<String, List<String>>>
SpotifyWrapper : +getUserMarket() Future<String>
SpotifyWrapper : +getRecommendation() Future<List<RecommendedTrackModel>>

class InternetUtil
InternetUtil : +hasInternet()$ Future<bool>
InternetUtil : +connectionStateStream()$ Stream<InternetConnectionStatus>

class SpotifyUtil
SpotifyUtil : +getLatestUserArtistsAndGenres()$ Future<Map<String, List<String>>>
SpotifyUtil : +extractArtistsAndGenres()$ Future<List<ListeningBehaviourModel>>

class ActivityServiceA
<<abstract>> ActivityServiceA
ActivityServiceA : +getCurrentActivity()* Future<String>

class LocationServiceA
<<abstract>> LocationServiceA
LocationServiceA : +getCurrentLocation()* Future<LocationModel>

class MusicServiceA
<<abstract>> MusicServiceA
MusicServiceA : +isActive Future~bool~
MusicServiceA : +init()* Future<void>
MusicServiceA : +resume()* Future<bool>
MusicServiceA : +play()* Future<bool>
MusicServiceA : +pause()* Future<bool>
MusicServiceA : +forward()* Future<bool>
MusicServiceA : +backward()* Future<bool>
MusicServiceA : +disconnect()* Future<void>
MusicServiceA : +getImage()* Future<Uint8List>
MusicServiceA : +subscribePlayerState()* Stream<PlayerStateModelA>

class BehaviourUploadServiceA
<<abstract>> BehaviourUploadServiceA
BehaviourUploadServiceA : +recentUploadTime Future~int?~
BehaviourUploadServiceA : +setRecentUploadTime()* Future<void>
BehaviourUploadServiceA : +uploadSongs()* Future<bool>

class PathServiceA
<<abstract>> PathServiceA
PathServiceA : +appDocPath String
PathServiceA : +appSupPath String
PathServiceA : +init()* Future<void>

class PlayerStateModelA
<<abstract>> PlayerStateModelA
PlayerStateModelA : +isSong bool?
PlayerStateModelA : +id String
PlayerStateModelA : +songName String
PlayerStateModelA : +artistIDs List~String~
PlayerStateModelA : +isPaused bool
PlayerStateModelA : +imageUri String?

class NetworkingServiceA
<<abstract>> NetworkingServiceA
NetworkingServiceA : +getGenreRecommendation()* Future<List<String>>

class PermissionServiceA
<<abstract>> PermissionServiceA
PermissionServiceA : +requestLocationAccess()* Future<bool>
PermissionServiceA : +reqeuestActivityRecognition()* Future<bool>
PermissionServiceA : +requestNotificationPermission()* Future<bool>
PermissionServiceA : +requestBackgroundLocationAccess()* Future<bool>
PermissionServiceA : +hasEnabledGPS()* Future<bool>

class RecommendationForegroundServiceA
<<abstract>> RecommendationForegroundServiceA
RecommendationForegroundServiceA : +init()* Future<void>
RecommendationForegroundServiceA : +isServiceRunning()* Future<bool>
RecommendationForegroundServiceA : +startService()* Future<bool>
RecommendationForegroundServiceA : +stopService()* Future<bool>
RecommendationForegroundServiceA : +restartService()* Future<bool>
RecommendationForegroundServiceA : +updateService()* Future<bool>

class CollectionForegroundServiceA
<<abstract>> CollectionForegroundServiceA
CollectionForegroundServiceA : +init()* Future<void>
CollectionForegroundServiceA : +isServiceRunning()* Future<bool>
CollectionForegroundServiceA : +startService()* Future<bool>
CollectionForegroundServiceA : +stopService()* Future<bool>
CollectionForegroundServiceA : +restartService()* Future<bool>
CollectionForegroundServiceA : +updateService()* Future<bool>

class OauthKeyServiceA
<<abstract>> OauthKeyServiceA
OauthKeyServiceA : +accessToken Future~String?~
OauthKeyServiceA : +refreshToken Future~String?~
OauthKeyServiceA : +putAccessTokens()* Future<void>
OauthKeyServiceA : +updateAccessToken()* Future<void>

class SecureStorageServiceA
<<abstract>> SecureStorageServiceA
SecureStorageServiceA : +read()* Future<String?>
SecureStorageServiceA : +write()* Future<void>
SecureStorageServiceA : +delete()* Future<void>
SecureStorageServiceA : +deleteAll()* Future<void>

class RecommendationServiceA
<<abstract>> RecommendationServiceA
RecommendationServiceA : +recommend()* Future<String>
RecommendationServiceA : -_chooseBestSong()* Future<List<double>>

class DBServiceA
<<abstract>> DBServiceA
DBServiceA : +init()* Future<void>
DBServiceA : +getRecent()* Future<List<ListeningBehaviourModel>>
DBServiceA : +put()* dynamic
DBServiceA : +update()* dynamic
DBServiceA : +delete()* dynamic
DBServiceA : +close()* Future<void>
DBServiceA : +getAll()* Future<List<ListeningBehaviourModel>>

class AuthServiceA
<<abstract>> AuthServiceA
AuthServiceA : +accessToken Future~String~
AuthServiceA : +init()* Future<void>
AuthServiceA : +getSignInUrl()* Future<String>
AuthServiceA : +signOut()* Future<void>
AuthServiceA : +deleteAccount()* Future<void>
AuthServiceA : +refreshAccessToken()* Future<void>

class PreprocessServiceA
<<abstract>> PreprocessServiceA
PreprocessServiceA : +behavioursToVectors()* Future<List<Vector>>
PreprocessServiceA : +behaviourToVector()* Vector
PreprocessServiceA : +activityConverter() int

class RecommendationHandler
RecommendationHandler : -_getIt GetIt
RecommendationHandler o-- GetIt
RecommendationHandler : -_musicService MusicServiceA?
RecommendationHandler o-- MusicServiceA
RecommendationHandler : -_recommendationForegroundService RecommendationForegroundServiceA
RecommendationHandler o-- RecommendationForegroundServiceA
RecommendationHandler : -_sub StreamSubscription~dynamic~?
RecommendationHandler o-- StreamSubscription~dynamic~
RecommendationHandler : -_latestSong String
RecommendationHandler : -_latestActivity String
RecommendationHandler : -_accessToken String
RecommendationHandler : -_timerStream Stream~int~
RecommendationHandler o-- Stream~int~
RecommendationHandler : -_activityService FlutterActivityRecognition
RecommendationHandler o-- FlutterActivityRecognition
RecommendationHandler : -_locationService LocationServiceA
RecommendationHandler o-- LocationServiceA
RecommendationHandler : -_recommendationService RecommendationServiceA?
RecommendationHandler o-- RecommendationServiceA
RecommendationHandler : -_newId String
RecommendationHandler : +initServices() Future<void>
RecommendationHandler : +onDestroy() Future<void>
RecommendationHandler : +onEvent() Future<void>
RecommendationHandler : +onStart() Future<void>
RecommendationHandler : +recommend() Future<String>
TaskHandler <|-- RecommendationHandler

class CollectionHandler
CollectionHandler : -_activityService FlutterActivityRecognition
CollectionHandler o-- FlutterActivityRecognition
CollectionHandler : -_getIt GetIt
CollectionHandler o-- GetIt
CollectionHandler : -_collectionForegroundService CollectionForegroundServiceA
CollectionHandler o-- CollectionForegroundServiceA
CollectionHandler : -_accessToken String
CollectionHandler : -_sub StreamSubscription~dynamic~?
CollectionHandler o-- StreamSubscription~dynamic~
CollectionHandler : -_latestActivity String
CollectionHandler : -_locationService LocationServiceA
CollectionHandler o-- LocationServiceA
CollectionHandler : -_latestSong String
CollectionHandler : +timerQueue Queue~DateTime~
CollectionHandler o-- Queue~DateTime~
CollectionHandler : +lastSong ListeningBehaviourModel?
CollectionHandler o-- ListeningBehaviourModel
CollectionHandler : -_timerStream Stream~int~
CollectionHandler o-- Stream~int~
CollectionHandler : -_timerSub StreamSubscription~dynamic~?
CollectionHandler o-- StreamSubscription~dynamic~
CollectionHandler : -_dbService DBServiceA
CollectionHandler o-- DBServiceA
CollectionHandler : +initServices() Future<void>
CollectionHandler : +onDestroy() Future<void>
CollectionHandler : +onEvent() Future<void>
CollectionHandler : +onStart() Future<void>
CollectionHandler : +registerOAuthUpdate() Future<void>
TaskHandler <|-- CollectionHandler

class SpotifyService
SpotifyService : -_getIt GetIt
SpotifyService o-- GetIt
SpotifyService : +isActive Future~bool~
SpotifyService : +backward() Future<bool>
SpotifyService : +disconnect() Future<void>
SpotifyService : +forward() Future<bool>
SpotifyService : +init() Future<void>
SpotifyService : +pause() Future<bool>
SpotifyService : +resume() Future<bool>
SpotifyService : +subscribePlayerState() Stream<PlayerStateModel>
SpotifyService : -_convertArtistsToId() List<String>
SpotifyService : +play() Future<bool>
SpotifyService : +getImage() Future<Uint8List>
MusicServiceA <|.. SpotifyService

class NetworkingService
NetworkingService : -_getIt GetIt
NetworkingService o-- GetIt
NetworkingService : +getGenreRecommendation() Future<List<String>>
NetworkingServiceA <|.. NetworkingService

class SpotifyOauthKeyService
SpotifyOauthKeyService : -_storageWrapperService SecureStorageServiceA
SpotifyOauthKeyService o-- SecureStorageServiceA
SpotifyOauthKeyService : +baseUrl String
SpotifyOauthKeyService : -_getIt GetIt
SpotifyOauthKeyService o-- GetIt
SpotifyOauthKeyService : +accessToken Future~String?~
SpotifyOauthKeyService : +refreshToken Future~String?~
SpotifyOauthKeyService : +putAccessTokens() Future<void>
SpotifyOauthKeyService : +updateAccessToken() Future<void>
OauthKeyServiceA <|.. SpotifyOauthKeyService

class RecommendationService
RecommendationService : -_getIt GetIt
RecommendationService o-- GetIt
RecommendationService : -_db DBServiceA
RecommendationService o-- DBServiceA
RecommendationService : -_preprocessService PreprocessServiceA
RecommendationService o-- PreprocessServiceA
RecommendationService : -_networkingService NetworkingServiceA
RecommendationService o-- NetworkingServiceA
RecommendationService : -_oauthKeyService OauthKeyServiceA
RecommendationService o-- OauthKeyServiceA
RecommendationService : -_chooseBestSong() Future<List<double>>
RecommendationService : +recommend() Future<String>
RecommendationService : +findMin() int
RecommendationServiceA <|-- RecommendationService

class AuthService
AuthService : -_keyServiceA OauthKeyServiceA
AuthService o-- OauthKeyServiceA
AuthService : -_getIt GetIt
AuthService o-- GetIt
AuthService : +accessToken Future~String~
AuthService : +deleteAccount() Future<void>
AuthService : +getSignInUrl() Future<String>
AuthService : +signOut() Future<void>
AuthService : +init() Future<void>
AuthService : +refreshAccessToken() Future<void>
AuthServiceA <|.. AuthService

class PreprocessService
PreprocessService : +behaviourToVector() Vector
PreprocessService : +behavioursToVectors() Future<List<Vector>>
PreprocessServiceA <|-- PreprocessService

class LocationService
LocationService : +getCurrentLocation() Future<LocationModel>
LocationServiceA <|.. LocationService

class ActivityService
ActivityService : +getCurrentActivity() Future<String>
ActivityServiceA <|.. ActivityService

class BehaviourUploadService
BehaviourUploadService : +dbServiceA DBServiceA
BehaviourUploadService o-- DBServiceA
BehaviourUploadService : +getIt GetIt
BehaviourUploadService o-- GetIt
BehaviourUploadService : +baseUrl String
BehaviourUploadService : -_authServiceA AuthServiceA
BehaviourUploadService o-- AuthServiceA
BehaviourUploadService : +recentUploadTime Future~int?~
BehaviourUploadService : +setRecentUploadTime() Future<void>
BehaviourUploadService : +uploadSongs() Future<bool>
BehaviourUploadServiceA <|.. BehaviourUploadService

class PermissionService
PermissionService : +context BuildContext
PermissionService o-- BuildContext
PermissionService : +requestLocationAccess() Future<bool>
PermissionService : +requestBackgroundLocationAccess() Future<bool>
PermissionService : +reqeuestActivityRecognition() Future<bool>
PermissionService : +requestNotificationPermission() Future<bool>
PermissionService : +hasEnabledGPS() Future<bool>
PermissionServiceA <|.. PermissionService

class SecureStorageWrapperService
SecureStorageWrapperService : -_secureStorage FlutterSecureStorage
SecureStorageWrapperService o-- FlutterSecureStorage
SecureStorageWrapperService : -_getAndroidOptions() AndroidOptions
SecureStorageWrapperService : +read() Future<String?>
SecureStorageWrapperService : +write() Future<void>
SecureStorageWrapperService : +delete() Future<void>
SecureStorageWrapperService : +deleteAll() Future<void>
SecureStorageServiceA <|.. SecureStorageWrapperService

class PathService
PathService : -_appDocDir Directory?
PathService o-- Directory
PathService : -_appSupDir Directory?
PathService o-- Directory
PathService : +appDocPath String
PathService : +appSupPath String
PathService : +init() Future<void>
PathServiceA <|-- PathService

class IsarDBService
IsarDBService : -_isar Isar
IsarDBService o-- Isar
IsarDBService : -_getIt GetIt
IsarDBService o-- GetIt
IsarDBService : +delete() dynamic
IsarDBService : +init() Future<void>
IsarDBService : +put() dynamic
IsarDBService : +update() dynamic
IsarDBService : +getRecent() Future<List<ListeningBehaviourModel>>
IsarDBService : +close() Future<void>
IsarDBService : +getAll() Future<List<ListeningBehaviourModel>>
DBServiceA <|-- IsarDBService

class CollectionForegroundService
CollectionForegroundService : +isServiceRunning() Future<bool>
CollectionForegroundService : +restartService() Future<bool>
CollectionForegroundService : +startService() Future<bool>
CollectionForegroundService : +stopService() Future<bool>
CollectionForegroundService : +init() Future<void>
CollectionForegroundService : +updateService() Future<bool>
CollectionForegroundServiceA <|.. CollectionForegroundService

class RecommendationForegroundService
RecommendationForegroundService : +isServiceRunning() Future<bool>
RecommendationForegroundService : +restartService() Future<bool>
RecommendationForegroundService : +startService() Future<bool>
RecommendationForegroundService : +stopService() Future<bool>
RecommendationForegroundService : +init() Future<void>
RecommendationForegroundService : +updateService() Future<bool>
RecommendationForegroundServiceA <|.. RecommendationForegroundService
